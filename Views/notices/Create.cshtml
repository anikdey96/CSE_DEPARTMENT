@model CSE_DEPARTMENT.Models.notice

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_HomeLayoutPage.cshtml";
}
<br />
<br />
<br />
<br />
<br />
<br />
@using (Html.BeginForm("Create", "notices", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="card mb-4 shadow">
            <div class="card-header py-3">
                <h3 class="m-0 font-weight-bold text-primary">Create</h3>

            </div>

            <div class="card-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.notice_upload, "Notice(Note: Please provide corresponding extension type after the notice name(Ex: if the notice is pdf format then provide .pdf extension)", htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.notice_upload, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.notice_upload, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.notice_topic, "Notice Tags", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.notice_topic, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.notice_topic, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="form-group">
                        @Html.LabelFor(model => model.files, "Upload Book(Note: For downloading the material you will have to provide uploaded document name as same as the Notice name & Maximum 5 MB file is allowed for uploading)", htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-10">
                            <span class="btn btn-default btn-file">

                                @Html.TextBoxFor(model => model.files, new { type = "file", @id = "files", @name = "files" })
                                @Html.ValidationMessageFor(model => model.files, "", new { @class = "text-danger" })
                            </span>
                        </div>
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.published_by, "Published By", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.published_by, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.published_by, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.publish_date, "Published Date", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.publish_date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.publish_date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.created_by, "Created By", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.created_by, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.created_by, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.created_date, "Created Date", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.created_date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.created_date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.updated_by, "Updated By", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.updated_by, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.updated_by, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.updated_date, "Updated Date", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.updated_date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.updated_date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.deadline, "Deadline", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.deadline, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.deadline, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.priority, "Priority", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.priority, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.priority, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.specification, "Specification", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.specification, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.specification, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" name="submit" class="btn btn-success" /> |
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-warning" })
                    </div>
                </div>

            </div>

        </div>
    </div>
}